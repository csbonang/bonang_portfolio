{"version":3,"sources":["components/Navbar.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["styles","navbarStyle","background","justifyContent","Navbar","style","className","href","About","id","Resume","class","Portfolio","Contact","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAUMA,EAAS,CACbC,YAAa,CACXC,WAAY,QACZC,eAAgB,aAkBLC,MAZf,WACE,OACE,sBAAKC,MAAOL,EAAOC,YAAaK,UAAU,SAA1C,UACE,mBAAGC,KAAK,IAAR,qBACA,mBAAGA,KAAK,SAAR,mBACA,mBAAGA,KAAK,UAAR,oBACA,mBAAGA,KAAK,aAAR,uBACA,mBAAGA,KAAK,aAAR,4BCQSC,MAff,WACE,OACE,yBAASC,GAAG,kBAAZ,+eCgBWC,MAlBf,WACE,OACE,gCACI,wCACA,0CACA,mBAAGC,MAAM,OAAT,uBACA,+BACI,yCACA,6CACA,wCACA,6CACA,yD,MCVKC,MAhBjB,WACI,OACA,sBAAKD,MAAM,iBAAX,UACI,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,eACA,qBAAKA,MAAM,YAAX,mBCsBOE,MAlBf,WACE,OACE,gCACI,wCACA,0CACA,mBAAGF,MAAM,OAAT,uBACA,+BACI,yCACA,6CACA,wCACA,6CACA,yDCNGG,MAdf,WACE,OACE,8BACE,eAAC,IAAD,WACA,cAAC,EAAD,IACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWT,IACtC,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,UAAUC,UAAWP,IACvC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,aAAaC,UAAWL,IAC1C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,aAAaC,UAAWJ,UCNnCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.411bf8ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Navbar.css';\r\n\r\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\r\n\r\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\r\n// Unlike regular HTML, a JSX style property must be an object instead of a string\r\n// On a style object, we camelCase all property names, and put all of the values in quotes\r\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\r\n\r\nconst styles = {\r\n  navbarStyle: {\r\n    background: 'green',\r\n    justifyContent: 'flex-end',\r\n  },\r\n};\r\n\r\n// We use JSX curly braces to evaluate the style object on the JSX tag\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav style={styles.navbarStyle} className=\"navbar\">\r\n      <a href=\"/\">Welcome</a>\r\n      <a href=\"/about\">About</a>\r\n      <a href=\"/resume\">Resume</a>\r\n      <a href=\"/portfolio\">Portfolio</a>\r\n      <a href=\"/contactMe\">Contact Me</a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n// import '../styles/Navbar.css';\r\n\r\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\r\n\r\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\r\n// Unlike regular HTML, a JSX style property must be an object instead of a string\r\n// On a style object, we camelCase all property names, and put all of the values in quotes\r\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\r\n\r\nconst styles = {\r\n  navbarStyle: {\r\n    background: 'green',\r\n    justifyContent: 'flex-end',\r\n  },\r\n};\r\n\r\n// We use JSX curly braces to evaluate the style object on the JSX tag\r\n\r\nfunction About() {\r\n  return (\r\n    <article id=\"aboutMe_content\">\r\n                Hello, my name is Clarisse Bonang, and welcome to my portfolio! \r\n                I am an aspiring software engineer. Below you will find my project\r\n                 highlights next to the work section. To open the deployed link \r\n                of each project, click on the image. You will also find a title,\r\n                description, and link to the project's GitHub repository under \r\n                the image. Under contact information, links to my email, GitHub,\r\n                and  LinkedIn page are displayed. I hope you enjoy my website \r\n                as much as I had developing it.  \r\n    </article>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n// import '../styles/Navbar.css';\r\n\r\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\r\n\r\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\r\n// Unlike regular HTML, a JSX style property must be an object instead of a string\r\n// On a style object, we camelCase all property names, and put all of the values in quotes\r\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\r\n\r\nconst styles = {\r\n  navbarStyle: {\r\n    background: 'green',\r\n    justifyContent: 'flex-end',\r\n  },\r\n};\r\n\r\n// We use JSX curly braces to evaluate the style object on the JSX tag\r\n\r\nfunction Resume() {\r\n  return (\r\n    <div> \r\n        <h1>Resume</h1>\r\n        <h2>Clarisse</h2>\r\n        <p class=\"head\">Interests</p>\r\n        <ul>\r\n            <li>Drawing</li>\r\n            <li>Photography</li>\r\n            <li>Design</li>\r\n            <li>Programming</li>\r\n            <li>Computer Science</li>\r\n        </ul>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react';\r\nimport '../styles/Portfolio.css';\r\n\r\n\r\nfunction Portfolio() {\r\n    return (\r\n    <div class=\"grid-container\">\r\n        <div class=\"grid-item\">1</div>\r\n        <div class=\"grid-item\">2</div>\r\n        <div class=\"grid-item\">3</div>  \r\n        <div class=\"grid-item\">4</div>\r\n        <div class=\"grid-item\">5</div>\r\n        <div class=\"grid-item\">6</div>  \r\n        <div class=\"grid-item\">7</div>\r\n        <div class=\"grid-item\">8</div>\r\n        <div class=\"grid-item\">9</div>  \r\n    </div>\r\n    );\r\n  }\r\n  \r\n  export default Portfolio;","import React from 'react';\r\n// import '../styles/Navbar.css';\r\n\r\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\r\n\r\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\r\n// Unlike regular HTML, a JSX style property must be an object instead of a string\r\n// On a style object, we camelCase all property names, and put all of the values in quotes\r\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\r\n\r\nconst styles = {\r\n  navbarStyle: {\r\n    background: 'green',\r\n    justifyContent: 'flex-end',\r\n  },\r\n};\r\n\r\n// We use JSX curly braces to evaluate the style object on the JSX tag\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div> \r\n        <h1>Resume</h1>\r\n        <h2>Clarisse</h2>\r\n        <p class=\"head\">Interests</p>\r\n        <ul>\r\n            <li>Drawing</li>\r\n            <li>Photography</li>\r\n            <li>Design</li>\r\n            <li>Programming</li>\r\n            <li>Computer Science</li>\r\n        </ul>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import Header from \"./components/Header\";\n// import Section from \"./components/Section\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/About\"; \nimport Resume from \"./components/Resume\"; \nimport Portfolio from \"./components/Portfolio\";\nimport Contact from \"./components/Contact\"\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n      <Navbar />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/resume\" component={Resume} />\n        <Route exact path=\"/portfolio\" component={Portfolio} />\n        <Route exact path=\"/contactMe\" component={Contact} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}